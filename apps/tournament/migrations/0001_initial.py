# Generated by Django 5.2.1 on 2025-05-16 17:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Game",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("rules_url", models.URLField(blank=True)),
                ("max_team_size", models.PositiveSmallIntegerField(default=5)),
            ],
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("logo", models.ImageField(blank=True, null=True, upload_to="logos/")),
                ("institution", models.CharField(blank=True, max_length=255)),
                (
                    "game",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="teams",
                        to="tournament.game",
                        verbose_name="Дисциплина",
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        limit_choices_to={"role": "manager"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teams_managed",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TeamMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_captain", models.BooleanField(default=False)),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournament.team",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        limit_choices_to={"role": "player"},
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="team",
            name="members",
            field=models.ManyToManyField(
                related_name="teams",
                through="tournament.TeamMembership",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Tournament",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=150)),
                (
                    "bracket_type",
                    models.CharField(
                        choices=[
                            ("se", "Single Elim"),
                            ("de", "Double Elim"),
                            ("rr", "Round-Robin"),
                            ("sw", "Swiss"),
                        ],
                        default="se",
                        max_length=2,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("registration_open", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Черновик"),
                            ("ongoing", "Идёт"),
                            ("finished", "Завершён"),
                        ],
                        default="draft",
                        max_length=10,
                    ),
                ),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournament.game",
                    ),
                ),
                (
                    "moderators",
                    models.ManyToManyField(
                        limit_choices_to={"role": "moderator"},
                        related_name="moderated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "referees",
                    models.ManyToManyField(
                        limit_choices_to={"role": "referee"},
                        related_name="refereed",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "teams",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Команды, зарегистрированные на турнир",
                        related_name="tournaments",
                        to="tournament.team",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Match",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("round", models.PositiveSmallIntegerField()),
                ("score_a", models.PositiveSmallIntegerField(default=0)),
                ("score_b", models.PositiveSmallIntegerField(default=0)),
                (
                    "team_a",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="tournament.team",
                    ),
                ),
                (
                    "team_b",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="tournament.team",
                    ),
                ),
                (
                    "tournament",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tournament.tournament",
                    ),
                ),
            ],
        ),
    ]
